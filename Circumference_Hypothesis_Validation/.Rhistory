# Packages
library(ggplot2)
library(cowplot)
library(reshape2)
library(plyr)
# Change directory
setwd("/home/yasel/Dropbox/Paper Viroplasmas/Programs/Validation_CircleHyphotesis")
# Load data
semiaxis<-read.csv("tabledata.csv")
# Hypothesis test (Test of Equal or Given Proportions)
by(semiaxis,
semiaxis[,c("Combination","Protein")],
function(x) ks.test(x$MinorSemiAxis,x$RadiusCirc))
#----------------------------------------------------------
# Successful number of fit in MajorSemiAxis
fit_MajorSemiaxis<-ddply(semiaxis, c("Combination","Protein"), function(x) sum(abs(x$MajorSemiAxis-x$RadiusCirc)<0.1))
# Hypothesis test (Test of Equal or Given Proportions)
by(fit_MajorSemiaxis,
fit_MajorSemiaxis[,c("Combination","Protein")],
function(x) prop.test(x$V1,60))
# Successful number of fit in MinorSemiAxis
fit_MinorSemiaxis<-ddply(semiaxis, c("Combination","Protein"), function(x) sum(abs(x$MinorSemiAxis-x$RadiusCirc)<0.1))
# Hypothesis test (Test of Equal or Given Proportions)
by(fit_MinorSemiaxis,
fit_MinorSemiaxis[,c("Combination","Protein")],
function(x) prop.test(x$V1,60))
ggplot(data = semiaxis,aes(x = Protein,y = Difference,fill=Protein))+geom_boxplot(notch = TRUE)
# Boxplot
p0<-ggplot(data = semiaxis,aes(x = variable,y = value,fill=Protein))+geom_boxplot(notch = TRUE)+
facet_grid(Combination ~. )+geom_hline(yintercept = 0,color="blue")
# compute lower and upper whiskers
ylim1 = boxplot.stats(semiaxis$value)$stats[c(1, 5)]
p1 = p0 + coord_cartesian(ylim = ylim1)
p1
semiaxis<-melt(semiaxis,id.vars=c("Combination","Protein"))
# Boxplot
p0<-ggplot(data = semiaxis,aes(x = variable,y = value,fill=Protein))+geom_boxplot(notch = TRUE)+
facet_grid(Combination ~. )+geom_hline(yintercept = 0,color="blue")
# compute lower and upper whiskers
ylim1 = boxplot.stats(semiaxis$value)$stats[c(1, 5)]
p1 = p0 + coord_cartesian(ylim = ylim1)
p1
# Packages
library(ggplot2)
library(cowplot)
library(reshape2)
library(plyr)
# Change directory
setwd("/home/yasel/Dropbox/Paper Viroplasmas/Programs/Validation_CircleHyphotesis")
# Load data
semiaxis<-read.csv("tabledata.csv")
# Hypothesis test (Test of Equal or Given Proportions)
by(semiaxis,
semiaxis[,c("Combination","Protein")],
function(x) ks.test(x$MinorSemiAxis,x$RadiusCirc))
# Change directory
setwd("/home/yasel/Dropbox/Paper Viroplasmas/Programs/Validation_CircleHyphotesis")
# Load data
semiaxis<-read.csv("tabledata.csv")
# Hypothesis test (Test of Equal or Given Proportions)
by(semiaxis,
semiaxis[,c("Combination","Protein")],
function(x) ks.test(x$MinorSemiAxis,x$RadiusCirc))
# Hypothesis test (Test of Equal or Given Proportions)
by(semiaxis,
semiaxis[,c("Combination","Protein")],
function(x) ks.test(x$MinorSemiAxis,x$MajorSemiAxis))
by(semiaxis,
semiaxis[,c("Combination","Protein")],
function(x) ks.test(x$MajorSemiAxis,x$RadiusCirc))
# Change directory
setwd("/home/yasel/Dropbox/Paper Viroplasmas/Programs/Validation_CircleHyphotesis")
# Load data
semiaxis<-read.csv("tabledata.csv")
by(semiaxis,
semiaxis[,c("Combination","Protein")],
function(x) ks.test(x$MajorSemiAxis,x$RadiusCirc))
by(semiaxis,
semiaxis[,c("Combination","Protein")],
function(x) ks.test(x$MajorSemiAxis,x$RadiusCirc))
ggplot(data = semiaxis,aes(x = Protein,y = Difference,fill=Protein))+geom_boxplot(notch = TRUE)
semiaxis<-melt(semiaxis,id.vars=c("Combination","Protein"))
# Boxplot
p0<-ggplot(data = semiaxis,aes(x = variable,y = value,fill=Protein))+geom_boxplot(notch = TRUE)+
facet_grid(Combination ~. )+geom_hline(yintercept = 0,color="blue")
# compute lower and upper whiskers
ylim1 = boxplot.stats(semiaxis$value)$stats[c(1, 5)]
p1 = p0 + coord_cartesian(ylim = ylim1)
p1
ggplot(data = semiaxis,aes(x = Protein,y = Difference,fill=Protein))+geom_boxplot(notch = TRUE)
ggplot(data = semiaxis,aes(x = Protein,y = Difference,fill=Protein))+geom_boxplot(notch = TRUE)
semiaxis
# Load data
semiaxis<-read.csv("tabledata.csv")
ggplot(data = semiaxis,aes(x = Protein,y = Difference,fill=Protein))+geom_boxplot(notch = TRUE)
semiaxis<-melt(semiaxis,id.vars=c("Combination","Protein"))
# Boxplot
p0<-ggplot(data = semiaxis,aes(x = variable,y = value,fill=Protein))+geom_boxplot(notch = TRUE)+
facet_grid(Combination ~. )+geom_hline(yintercept = 0,color="blue")
# compute lower and upper whiskers
ylim1 = boxplot.stats(semiaxis$value)$stats[c(1, 5)]
p1 = p0 + coord_cartesian(ylim = ylim1)
p1
ggplot(data = semiaxis,aes(x = Protein,y = Difference,fill=Protein))+geom_boxplot(notch = TRUE)
# Load data
semiaxis<-read.csv("tabledata.csv")
View(semiaxis)
colnames(semiaxis)
ggplot(data = semiaxis,aes(x = Protein,y = abs(MajorSemiAxis-RadiusCirc),fill=Protein))+geom_boxplot(notch = TRUE)
ggplot(data = semiaxis,aes(x = Protein,y = abs(MinorSemiAxis-RadiusCirc),fill=Protein))+geom_boxplot(notch = TRUE)
# Packages
library(ggplot2)
library(cowplot)
library(reshape2)
library(plyr)
##----------------------------------------------------------------------##
# Change directory
setwd("/home/yasel/Dropbox/Paper Viroplasmas/Programs/Validation_Circumference_Hypothesis")
# Load data
semiaxis<-read.csv("Result.csv")
mydata<-melt(semiaxis,id.vars = c("Combination","Protein"))
#========================================================================
notNSP2<-subset(semiaxis,Protein != "NSP2")
ggplot(notNSP2,aes(x = RadiusCirc,y = MajorSemiAxis,color=Protein))+geom_point()+
facet_grid(.~Combination)+geom_smooth(method='lm',formula=y~x)
theme_set(theme_cowplot())
ggplot(notNSP2,aes(x = RadiusCirc,y = MajorSemiAxis,color=Protein))+geom_point()+
facet_grid(.~Combination)+geom_smooth(method='lm',formula=y~x)
ggplot(notNSP2,aes(x = RadiusCirc,y = MajorSemiAxis,color=Protein))+geom_point()+
facet_grid(.~Combination)+geom_smooth(method='lm',formula=y~x)+opts(axis.text.x=theme_text(angle=-90))
ggplot(notNSP2,aes(x = RadiusCirc,y = MajorSemiAxis,color=Protein))+geom_point()+
facet_grid(.~Combination)+geom_smooth(method='lm',formula=y~x)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(notNSP2,aes(x = RadiusCirc,y = MinorSemiAxis,color=Protein))+geom_point()+
facet_grid(.~Combination)+geom_smooth(method='lm',formula=y~x)+theme(legend.position = "none")
ggplot(notNSP2,aes(x = RadiusCirc,y = MinorSemiAxis,color=Protein))+geom_point()+
facet_grid(.~Combination)+geom_smooth(method='lm',formula=y~x)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
by(semiaxis,
semiaxis[,c("Combination","Protein")],
function(x) summary(lm(x$MajorSemiAxis ~ x$RadiusCirc -1)))
by(semiaxis,
semiaxis[,c("Combination","Protein")],
function(x) summary(lm(x$MinorSemiAxis ~ x$RadiusCirc -1)))
View(semiaxis)
#========================================================================
by(semiaxis,
semiaxis[,c("Combination","Protein")],
function(x) shapiro.test(x$MajorSemiAxis,conf.int = TRUE))
#========================================================================
by(semiaxis,
semiaxis[,c("Combination","Protein")],
function(x) shapiro.test(x$MajorSemiAxisE))
#========================================================================
by(semiaxis,
semiaxis[,c("Combination","Protein")],
function(x) shapiro.test(x$MajorSemiAxis))
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(runif(100, min = 2, max = 4))
detach("package:plyr", unload = TRUE)
detach("package:reshape2", unload = TRUE)
library(ggplot2)
library(cowplot)
theme_set(theme_cowplot())
#library(reshape2)
#library(plyr)
# Change directory
setwd("/home/yasel/Dropbox/Paper Viroplasmas/Programs/Validation_Circumference_Hypothesis")
# Load data
semiaxis<-read.csv("Result.csv")
#================================================
#========================================================================
# For each protein combination, we accomplish a Shapiroâ€“Wilk hypothesis test to study if
# any of the three distributions functions (circumference radius (r), semi-major axis (a) and
# semi-minor axis (b)) came from a normally distributed population
# Major semi axis
by(semiaxis,
semiaxis[,c("Combination","Protein")],
function(x) shapiro.test(x$MajorSemiAxis))
# Minor semi axis
by(semiaxis,
semiaxis[,c("Combination","Protein")],
function(x) shapiro.test(x$MinorSemiAxis))
# Circumference radius
by(semiaxis,
semiaxis[,c("Combination","Protein")],
function(x) shapiro.test(x$RadiusCirc))
#========================================================================
notNSP2<-subset(semiaxis,Protein != "NSP2")
ggplot(notNSP2,aes(x = RadiusCirc,y = MajorSemiAxis,color=Protein))+geom_point()+
facet_grid(.~Combination)+geom_smooth(method='lm',formula=y~x)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(notNSP2,aes(x = RadiusCirc,y = MinorSemiAxis,color=Protein))+geom_point()+
facet_grid(.~Combination)+geom_smooth(method='lm',formula=y~x)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
by(semiaxis,
semiaxis[,c("Combination","Protein")],
function(x) summary(lm(x$MajorSemiAxis ~ x$RadiusCirc -1)))
by(semiaxis,
semiaxis[,c("Combination","Protein")],
function(x) summary(lm(x$MinorSemiAxis ~ x$RadiusCirc -1)))
#========================================================================
# Hypothesis test (Test of Equal or Given Proportions)
by(semiaxis,
semiaxis[,c("Combination","Protein")],
function(x) wilcox.test(x$MinorSemiAxis,x$RadiusCirc,conf.int = TRUE))
by(semiaxis,
semiaxis[,c("Combination","Protein")],
function(x) wilcox.test(x$MajorSemiAxis,x$RadiusCirc,conf.int = TRUE))
ggplot(notNSP2,aes(x = RadiusCirc,y = MajorSemiAxis,color=Protein))+geom_point()+
facet_grid(.~Combination)+geom_smooth(method='lm',formula=y~x)+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
install.packages(c("gdata", "ggsignif", "gplots"))
